version: '3.9'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "500m"
    max-file: "2"

services:
  nginx:
    image: nginx:1.25.4
    logging: *default-logging
    ports:
      - target:    {{ nginx.port_http }}
        published: {{ nginx.port_http }}
        protocol:  tcp
        mode:      host
      - target:    {{ nginx.port_https }}
        published: {{ nginx.port_https }}
        protocol:  tcp
        mode:      host
    healthcheck:
      test:     curl -k --fail http://localhost/healthz || exit 1
      interval: 60s
      timeout:  20s
      retries:  3
    networks:
      - keycloak-network
      - boxed-bots-proxy
    volumes:
      - "{{ home }}/nginx:/etc/nginx/templates:ro"
      - "{{ home }}/htmls:/usr/share/nginx/html:ro"
      - "{{ letsencrypt_path }}:{{ letsencrypt_path }}:ro"
    environment:
      TZ: Europe/Moscow
      SERVER_NAME: "{{ secrets.server_name }}"
      
      PORT_HTTP:  "{{ nginx.port_http }}"
      PORT_HTTPS: "{{ nginx.port_https }}"

      HTML_HOME: "/usr/share/nginx/html"

      SSL_CERT:     "{{ letsencrypt_path }}/live/{{ secrets.server_name }}/fullchain.pem"
      SSL_CERT_KEY: "{{ letsencrypt_path }}/live/{{ secrets.server_name }}/privkey.pem"

      NGINX_ENVSUBST_TEMPLATE_DIR:    "/etc/nginx/templates"
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: ".template.conf"
      NGINX_ENVSUBST_OUTPUT_DIR:      "/etc/nginx"

      RESOLVER: "127.0.0.11"

      METRICS_ALLOW_FROM: "127.0.0.1"
      METRICS_DENY_FROM:  "all"

      SSL_SESSION_TIMEOUT: "1d"
      SSL_SESSION_CACHE:   "shared:MozSSL:10m"
      SSL_SESSION_TICKETS: "off"

      SSL_PROTOCOLS:      "TLSv1.2 TLSv1.3"
      SSL_CIPHERS:        "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
      SSL_PREFER_CIPHERS: "on"
      SSL_VERIFY:         "off"
      SSL_OCSP_STAPLING:  "off"

      STRICT_TRANSPORT_SECURITY: "max-age=31536000; includeSubdomains;"
      SERVER_TOKENS:             "off"
      X_FRAME_OPTIONS:           "SAMEORIGIN"
      X_CONTENT_TYPE_OPTIONS:    "nosniff"

      KEYCLOAK_PATH: "{{ secrets.keycloak.url_path }}"
      KEYCLOAK_PASS: "http://keycloak:8080"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == {{ placement.nginx }}

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    logging: *default-logging
    networks:
      - keycloak-network
    command: start
    environment:
      TZ: Europe/Moscow

      # This admin user should be disabled after first login
      # KC_CREATE_ADMIN_USER:    'true'
      # KEYCLOAK_ADMIN:          'admin'
      # KEYCLOAK_ADMIN_PASSWORD: 'admin'

      KC_HTTP_ENABLED: 'true'

      KC_HOSTNAME:        '{{ secrets.server_name }}'
      KC_HOSTNAME_STRICT: 'true'

      KC_HTTP_RELATIVE_PATH: '{{ secrets.keycloak.url_path }}'
      KC_PROXY_HEADERS:      'xforwarded'

      KC_HEALTH_ENABLED:  'true'
      KC_METRICS_ENABLED: 'true'

      KC_DB: 'postgres'
      KC_DB_URL: 'jdbc:postgresql://keycloak-postgres:5432/postgres'
      KC_DB_USERNAME: 'postgres'
      KC_DB_PASSWORD: '{{ secrets.keycloak.postgres_password }}'

      KC_LOG_LEVEL: 'info'
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == {{ placement.keycloak }}
  
  keycloak-postgres:
    image: postgres:15.6
    logging: *default-logging
    volumes:
      - keycloak-postgres-data:/var/lib/postgresql/data
    networks:
      - keycloak-network
    environment:
      TZ: 'Europe/Moscow'
      PGDATA: '/var/lib/postgresql/data/pgdata'
      POSTGRES_PASSWORD: '{{ secrets.keycloak.postgres_password }}'
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == {{ placement.keycloak_postgres }}

networks:
  keycloak-network:
  boxed-bots-proxy:
    name: boxed-bots-proxy
    driver: overlay

volumes:
  keycloak-postgres-data:
